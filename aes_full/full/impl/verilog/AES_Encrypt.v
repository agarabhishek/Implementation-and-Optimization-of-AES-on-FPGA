// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="AES_Encrypt,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=4.100000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.100000,HLS_SYN_LAT=2357,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=0,HLS_SYN_FF=627,HLS_SYN_LUT=944}" *)

module AES_Encrypt (
        ap_clk,
        ap_rst_n,
        ciphertext_req_din,
        ciphertext_req_full_n,
        ciphertext_req_write,
        ciphertext_rsp_empty_n,
        ciphertext_rsp_read,
        ciphertext_address,
        ciphertext_datain,
        ciphertext_dataout,
        ciphertext_size,
        iv_req_din,
        iv_req_full_n,
        iv_req_write,
        iv_rsp_empty_n,
        iv_rsp_read,
        iv_address,
        iv_datain,
        iv_dataout,
        iv_size,
        s_axi_CRTLSc_AWVALID,
        s_axi_CRTLSc_AWREADY,
        s_axi_CRTLSc_AWADDR,
        s_axi_CRTLSc_WVALID,
        s_axi_CRTLSc_WREADY,
        s_axi_CRTLSc_WDATA,
        s_axi_CRTLSc_WSTRB,
        s_axi_CRTLSc_ARVALID,
        s_axi_CRTLSc_ARREADY,
        s_axi_CRTLSc_ARADDR,
        s_axi_CRTLSc_RVALID,
        s_axi_CRTLSc_RREADY,
        s_axi_CRTLSc_RDATA,
        s_axi_CRTLSc_RRESP,
        s_axi_CRTLSc_BVALID,
        s_axi_CRTLSc_BREADY,
        s_axi_CRTLSc_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 23'b1;
parameter    ap_ST_st2_fsm_1 = 23'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 23'b100;
parameter    ap_ST_st6_fsm_3 = 23'b1000;
parameter    ap_ST_st7_fsm_4 = 23'b10000;
parameter    ap_ST_st8_fsm_5 = 23'b100000;
parameter    ap_ST_st9_fsm_6 = 23'b1000000;
parameter    ap_ST_st10_fsm_7 = 23'b10000000;
parameter    ap_ST_st11_fsm_8 = 23'b100000000;
parameter    ap_ST_st12_fsm_9 = 23'b1000000000;
parameter    ap_ST_st13_fsm_10 = 23'b10000000000;
parameter    ap_ST_st14_fsm_11 = 23'b100000000000;
parameter    ap_ST_st15_fsm_12 = 23'b1000000000000;
parameter    ap_ST_st16_fsm_13 = 23'b10000000000000;
parameter    ap_ST_st17_fsm_14 = 23'b100000000000000;
parameter    ap_ST_st18_fsm_15 = 23'b1000000000000000;
parameter    ap_ST_st19_fsm_16 = 23'b10000000000000000;
parameter    ap_ST_st20_fsm_17 = 23'b100000000000000000;
parameter    ap_ST_st21_fsm_18 = 23'b1000000000000000000;
parameter    ap_ST_st22_fsm_19 = 23'b10000000000000000000;
parameter    ap_ST_st23_fsm_20 = 23'b100000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_21 = 23'b1000000000000000000000;
parameter    ap_ST_st27_fsm_22 = 23'b10000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_CRTLSC_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CRTLSC_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv8_10 = 8'b10000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;

parameter C_S_AXI_CRTLSC_WSTRB_WIDTH = (C_S_AXI_CRTLSC_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   ciphertext_req_din;
input   ciphertext_req_full_n;
output   ciphertext_req_write;
input   ciphertext_rsp_empty_n;
output   ciphertext_rsp_read;
output  [31:0] ciphertext_address;
input  [7:0] ciphertext_datain;
output  [7:0] ciphertext_dataout;
output  [31:0] ciphertext_size;
output   iv_req_din;
input   iv_req_full_n;
output   iv_req_write;
input   iv_rsp_empty_n;
output   iv_rsp_read;
output  [31:0] iv_address;
input  [7:0] iv_datain;
output  [7:0] iv_dataout;
output  [31:0] iv_size;
input   s_axi_CRTLSc_AWVALID;
output   s_axi_CRTLSc_AWREADY;
input  [C_S_AXI_CRTLSC_ADDR_WIDTH - 1 : 0] s_axi_CRTLSc_AWADDR;
input   s_axi_CRTLSc_WVALID;
output   s_axi_CRTLSc_WREADY;
input  [C_S_AXI_CRTLSC_DATA_WIDTH - 1 : 0] s_axi_CRTLSc_WDATA;
input  [C_S_AXI_CRTLSC_WSTRB_WIDTH - 1 : 0] s_axi_CRTLSc_WSTRB;
input   s_axi_CRTLSc_ARVALID;
output   s_axi_CRTLSc_ARREADY;
input  [C_S_AXI_CRTLSC_ADDR_WIDTH - 1 : 0] s_axi_CRTLSc_ARADDR;
output   s_axi_CRTLSc_RVALID;
input   s_axi_CRTLSc_RREADY;
output  [C_S_AXI_CRTLSC_DATA_WIDTH - 1 : 0] s_axi_CRTLSc_RDATA;
output  [1:0] s_axi_CRTLSc_RRESP;
output   s_axi_CRTLSc_BVALID;
input   s_axi_CRTLSc_BREADY;
output  [1:0] s_axi_CRTLSc_BRESP;
output   interrupt;

reg ciphertext_req_din;
reg ciphertext_req_write;
reg iv_req_write;
reg iv_rsp_read;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_40;
reg    ap_ready;
wire   [3:0] newState_address0;
reg    newState_ce0;
wire   [7:0] newState_q0;
reg   [7:0] expandedKey_address0;
reg    expandedKey_ce0;
wire   [7:0] expandedKey_q0;
wire   [15:0] Nr;
reg   [9:0] cipher_address0;
reg    cipher_ce0;
wire   [7:0] cipher_q0;
wire   [7:0] cipher_q1;
wire   [7:0] cipher_q2;
wire   [7:0] cipher_q3;
reg   [4:0] indvar_reg_215;
reg   [4:0] ap_reg_ppstg_indvar_reg_215_pp0_iter1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_147;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] exitcond1_reg_489;
reg    ap_sig_156;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg   [4:0] indvar6_reg_283;
wire   [7:0] grp_fu_306_p2;
reg   [7:0] reg_312;
reg    ap_sig_cseq_ST_st7_fsm_4;
reg    ap_sig_173;
reg    ap_sig_cseq_ST_st19_fsm_16;
reg    ap_sig_180;
wire   [7:0] state_q0;
reg   [7:0] reg_317;
reg    ap_sig_cseq_ST_st11_fsm_8;
reg    ap_sig_190;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_21;
reg    ap_sig_197;
reg    ap_reg_ppiten_pp1_it1;
reg    ap_reg_ppiten_pp1_it0;
reg   [0:0] exitcond8_reg_603;
reg   [0:0] ap_reg_ppstg_exitcond8_reg_603_pp1_iter1;
reg    ap_sig_209;
reg    ap_reg_ppiten_pp1_it2;
wire   [0:0] exitcond1_fu_322_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_489_pp0_iter1;
wire   [4:0] indvar_next_fu_328_p2;
reg   [4:0] indvar_next_reg_493;
reg   [7:0] iv_read_reg_498;
wire   [4:0] i_fu_345_p2;
reg   [4:0] i_reg_506;
reg    ap_sig_cseq_ST_st6_fsm_3;
reg    ap_sig_233;
wire   [0:0] exitcond_i1_fu_339_p2;
reg   [3:0] state_addr_31_reg_516;
wire   [3:0] i_5_fu_363_p2;
reg   [3:0] i_5_reg_524;
reg    ap_sig_cseq_ST_st9_fsm_6;
reg    ap_sig_249;
wire   [4:0] i_4_fu_375_p2;
reg   [4:0] i_4_reg_532;
reg    ap_sig_cseq_ST_st10_fsm_7;
reg    ap_sig_258;
reg   [3:0] state_addr_34_reg_537;
wire   [0:0] exitcond_i3_fu_369_p2;
reg    ap_sig_cseq_ST_st12_fsm_9;
reg    ap_sig_272;
reg   [7:0] cipher_load_reg_547;
reg    ap_sig_cseq_ST_st13_fsm_10;
reg    ap_sig_280;
wire   [0:0] tmp_21_fu_391_p2;
reg   [0:0] tmp_21_reg_552;
reg    ap_sig_cseq_ST_st15_fsm_12;
reg    ap_sig_289;
wire    grp_AES_Encrypt_ShiftRows_fu_301_ap_done;
wire   [7:0] tmp_24_fu_405_p2;
reg   [7:0] tmp_24_reg_556;
reg    ap_sig_cseq_ST_st17_fsm_14;
reg    ap_sig_302;
wire    grp_AES_Encrypt_MixColumns_fu_294_ap_done;
wire   [4:0] i_6_fu_417_p2;
reg   [4:0] i_6_reg_564;
reg    ap_sig_cseq_ST_st18_fsm_15;
reg    ap_sig_317;
wire   [0:0] exitcond_i2_fu_411_p2;
reg   [3:0] state_addr_36_reg_574;
wire   [0:0] exitcond_i_fu_442_p2;
reg    ap_sig_cseq_ST_st21_fsm_18;
reg    ap_sig_333;
wire   [4:0] i_3_fu_448_p2;
reg   [4:0] i_3_reg_583;
reg   [3:0] state_addr_33_reg_593;
wire   [7:0] tmp_20_fu_460_p2;
reg   [7:0] tmp_20_reg_598;
reg    ap_sig_cseq_ST_st22_fsm_19;
reg    ap_sig_350;
wire   [0:0] exitcond8_fu_466_p2;
wire   [4:0] indvar_next7_fu_472_p2;
wire   [0:0] is_0iter_fu_483_p2;
reg   [0:0] is_0iter_reg_617;
reg   [0:0] ap_reg_ppstg_is_0iter_reg_617_pp1_iter1;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_372;
reg   [3:0] state_address0;
reg    state_ce0;
reg    state_we0;
reg   [7:0] state_d0;
reg   [3:0] state_address1;
reg    state_ce1;
wire   [7:0] state_q1;
wire    grp_AES_Encrypt_MixColumns_fu_294_ap_start;
wire    grp_AES_Encrypt_MixColumns_fu_294_ap_idle;
wire    grp_AES_Encrypt_MixColumns_fu_294_ap_ready;
wire   [3:0] grp_AES_Encrypt_MixColumns_fu_294_state_address0;
wire    grp_AES_Encrypt_MixColumns_fu_294_state_ce0;
wire    grp_AES_Encrypt_MixColumns_fu_294_state_we0;
wire   [7:0] grp_AES_Encrypt_MixColumns_fu_294_state_d0;
wire   [3:0] grp_AES_Encrypt_MixColumns_fu_294_state_address1;
wire    grp_AES_Encrypt_MixColumns_fu_294_state_ce1;
wire    grp_AES_Encrypt_ShiftRows_fu_301_ap_start;
wire    grp_AES_Encrypt_ShiftRows_fu_301_ap_idle;
wire    grp_AES_Encrypt_ShiftRows_fu_301_ap_ready;
wire   [3:0] grp_AES_Encrypt_ShiftRows_fu_301_state_address0;
wire    grp_AES_Encrypt_ShiftRows_fu_301_state_ce0;
wire    grp_AES_Encrypt_ShiftRows_fu_301_state_we0;
wire   [7:0] grp_AES_Encrypt_ShiftRows_fu_301_state_d0;
wire   [3:0] grp_AES_Encrypt_ShiftRows_fu_301_state_address1;
wire    grp_AES_Encrypt_ShiftRows_fu_301_state_ce1;
reg   [4:0] indvar_phi_fu_219_p4;
reg   [4:0] i_0_i1_reg_227;
reg    ap_sig_cseq_ST_st8_fsm_5;
reg    ap_sig_435;
reg   [3:0] i4_reg_238;
reg   [4:0] i_i_reg_250;
wire   [0:0] exitcond_fu_357_p2;
reg    ap_sig_cseq_ST_st14_fsm_11;
reg    ap_sig_455;
reg   [4:0] i_0_i2_reg_261;
reg    ap_sig_cseq_ST_st20_fsm_17;
reg    ap_sig_464;
reg   [4:0] i_0_i_reg_272;
reg    ap_sig_cseq_ST_st23_fsm_20;
reg    ap_sig_473;
reg    ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start;
reg    ap_sig_cseq_ST_st16_fsm_13;
reg    ap_sig_486;
reg    ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start;
wire   [63:0] tmp_s_fu_334_p1;
wire   [63:0] tmp_17_fu_351_p1;
wire   [63:0] tmp_i_fu_381_p1;
wire   [63:0] tmp_1_i_fu_386_p1;
wire   [63:0] sum5_cast_fu_437_p1;
wire   [63:0] tmp_25_fu_423_p1;
wire   [63:0] tmp_19_fu_454_p1;
wire   [63:0] tmp_22_fu_478_p1;
wire   [7:0] tmp_23_fu_397_p3;
wire   [7:0] tmp_74_cast_fu_428_p1;
wire   [7:0] sum5_fu_432_p2;
reg    ap_sig_cseq_ST_st27_fsm_22;
reg    ap_sig_638;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it2 = 1'b0;
#0 ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start = 1'b0;
#0 ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start = 1'b0;
end

AES_Encrypt_MixColumns_cipher #(
    .DataWidth( 8 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
cipher_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(cipher_address0),
    .ce0(cipher_ce0),
    .q0(cipher_q0),
    .address1(ap_const_lv10_0),
    .ce1(1'b0),
    .q1(cipher_q1),
    .address2(ap_const_lv10_0),
    .ce2(1'b0),
    .q2(cipher_q2),
    .address3(ap_const_lv10_0),
    .ce3(1'b0),
    .q3(cipher_q3)
);

AES_Encrypt_CRTLSc_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTLSC_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTLSC_DATA_WIDTH ))
AES_Encrypt_CRTLSc_s_axi_U(
    .AWVALID(s_axi_CRTLSc_AWVALID),
    .AWREADY(s_axi_CRTLSc_AWREADY),
    .AWADDR(s_axi_CRTLSc_AWADDR),
    .WVALID(s_axi_CRTLSc_WVALID),
    .WREADY(s_axi_CRTLSc_WREADY),
    .WDATA(s_axi_CRTLSc_WDATA),
    .WSTRB(s_axi_CRTLSc_WSTRB),
    .ARVALID(s_axi_CRTLSc_ARVALID),
    .ARREADY(s_axi_CRTLSc_ARREADY),
    .ARADDR(s_axi_CRTLSc_ARADDR),
    .RVALID(s_axi_CRTLSc_RVALID),
    .RREADY(s_axi_CRTLSc_RREADY),
    .RDATA(s_axi_CRTLSc_RDATA),
    .RRESP(s_axi_CRTLSc_RRESP),
    .BVALID(s_axi_CRTLSc_BVALID),
    .BREADY(s_axi_CRTLSc_BREADY),
    .BRESP(s_axi_CRTLSc_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .newState_address0(newState_address0),
    .newState_ce0(newState_ce0),
    .newState_q0(newState_q0),
    .expandedKey_address0(expandedKey_address0),
    .expandedKey_ce0(expandedKey_ce0),
    .expandedKey_q0(expandedKey_q0),
    .Nr(Nr)
);

AES_Encrypt_state #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
state_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(state_address0),
    .ce0(state_ce0),
    .we0(state_we0),
    .d0(state_d0),
    .q0(state_q0),
    .address1(state_address1),
    .ce1(state_ce1),
    .q1(state_q1)
);

AES_Encrypt_MixColumns grp_AES_Encrypt_MixColumns_fu_294(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_AES_Encrypt_MixColumns_fu_294_ap_start),
    .ap_done(grp_AES_Encrypt_MixColumns_fu_294_ap_done),
    .ap_idle(grp_AES_Encrypt_MixColumns_fu_294_ap_idle),
    .ap_ready(grp_AES_Encrypt_MixColumns_fu_294_ap_ready),
    .state_address0(grp_AES_Encrypt_MixColumns_fu_294_state_address0),
    .state_ce0(grp_AES_Encrypt_MixColumns_fu_294_state_ce0),
    .state_we0(grp_AES_Encrypt_MixColumns_fu_294_state_we0),
    .state_d0(grp_AES_Encrypt_MixColumns_fu_294_state_d0),
    .state_q0(state_q0),
    .state_address1(grp_AES_Encrypt_MixColumns_fu_294_state_address1),
    .state_ce1(grp_AES_Encrypt_MixColumns_fu_294_state_ce1),
    .state_q1(state_q1)
);

AES_Encrypt_ShiftRows grp_AES_Encrypt_ShiftRows_fu_301(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_AES_Encrypt_ShiftRows_fu_301_ap_start),
    .ap_done(grp_AES_Encrypt_ShiftRows_fu_301_ap_done),
    .ap_idle(grp_AES_Encrypt_ShiftRows_fu_301_ap_idle),
    .ap_ready(grp_AES_Encrypt_ShiftRows_fu_301_ap_ready),
    .state_address0(grp_AES_Encrypt_ShiftRows_fu_301_state_address0),
    .state_ce0(grp_AES_Encrypt_ShiftRows_fu_301_state_ce0),
    .state_we0(grp_AES_Encrypt_ShiftRows_fu_301_state_we0),
    .state_d0(grp_AES_Encrypt_ShiftRows_fu_301_state_d0),
    .state_q0(state_q0),
    .state_address1(grp_AES_Encrypt_ShiftRows_fu_301_state_address1),
    .state_ce1(grp_AES_Encrypt_ShiftRows_fu_301_state_ce1),
    .state_q1(state_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st16_fsm_13)) begin
            ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start <= 1'b1;
        end else if ((1'b1 == grp_AES_Encrypt_MixColumns_fu_294_ap_ready)) begin
            ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & ~(1'b0 == exitcond_i3_fu_369_p2))) begin
            ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start <= 1'b1;
        end else if ((1'b1 == grp_AES_Encrypt_ShiftRows_fu_301_ap_ready)) begin
            ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b0 == exitcond1_fu_322_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & (1'b0 == exitcond1_fu_322_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b0 == exitcond1_fu_322_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b0 == exitcond8_fu_466_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_18) & ~(1'b0 == exitcond_i_fu_442_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & (1'b0 == exitcond8_fu_466_p2))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st21_fsm_18) & ~(1'b0 == exitcond_i_fu_442_p2)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b0 == exitcond8_fu_466_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= 1'b0;
    end else begin
        if (~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_18) & ~(1'b0 == exitcond_i_fu_442_p2))) begin
            ap_reg_ppiten_pp1_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_3) & ~(1'b0 == exitcond_i1_fu_339_p2))) begin
        i4_reg_238 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_15) & ~(1'b0 == exitcond_i2_fu_411_p2))) begin
        i4_reg_238 <= i_5_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b0 == exitcond1_fu_322_p2))) begin
        i_0_i1_reg_227 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        i_0_i1_reg_227 <= i_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_17)) begin
        i_0_i2_reg_261 <= i_6_reg_564;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & ~((1'b0 == tmp_21_reg_552) & (1'b0 == grp_AES_Encrypt_MixColumns_fu_294_ap_done)))) begin
        i_0_i2_reg_261 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_6) & ~(1'b0 == exitcond_fu_357_p2))) begin
        i_0_i_reg_272 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_20)) begin
        i_0_i_reg_272 <= i_3_reg_583;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_11)) begin
        i_i_reg_250 <= i_4_reg_532;
    end else if (((1'b1 == ap_sig_cseq_ST_st9_fsm_6) & (1'b0 == exitcond_fu_357_p2))) begin
        i_i_reg_250 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_18) & ~(1'b0 == exitcond_i_fu_442_p2))) begin
        indvar6_reg_283 <= ap_const_lv5_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & (1'b0 == exitcond8_fu_466_p2))) begin
        indvar6_reg_283 <= indvar_next7_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond1_reg_489 == 1'b0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_215 <= indvar_next_reg_493;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvar_reg_215 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_489_pp0_iter1 <= exitcond1_reg_489;
        ap_reg_ppstg_indvar_reg_215_pp0_iter1 <= indvar_reg_215;
        exitcond1_reg_489 <= exitcond1_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)))) begin
        ap_reg_ppstg_exitcond8_reg_603_pp1_iter1 <= exitcond8_reg_603;
        ap_reg_ppstg_is_0iter_reg_617_pp1_iter1 <= is_0iter_reg_617;
        exitcond8_reg_603 <= exitcond8_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_10)) begin
        cipher_load_reg_547 <= cipher_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_18)) begin
        i_3_reg_583 <= i_3_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_7)) begin
        i_4_reg_532 <= i_4_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        i_5_reg_524 <= i_5_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_15)) begin
        i_6_reg_564 <= i_6_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_3)) begin
        i_reg_506 <= i_fu_345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_493 <= indvar_next_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & (1'b0 == exitcond8_fu_466_p2))) begin
        is_0iter_reg_617 <= is_0iter_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond1_reg_489 == 1'b0) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        iv_read_reg_498 <= iv_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_4) | (1'b1 == ap_sig_cseq_ST_st19_fsm_16))) begin
        reg_312 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_8) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2))))) begin
        reg_317 <= state_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_3) & (1'b0 == exitcond_i1_fu_339_p2))) begin
        state_addr_31_reg_516 <= tmp_17_fu_351_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_18) & (1'b0 == exitcond_i_fu_442_p2))) begin
        state_addr_33_reg_593 <= tmp_19_fu_454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & (1'b0 == exitcond_i3_fu_369_p2))) begin
        state_addr_34_reg_537 <= tmp_i_fu_381_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_15) & (1'b0 == exitcond_i2_fu_411_p2))) begin
        state_addr_36_reg_574 <= tmp_25_fu_423_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_19)) begin
        tmp_20_reg_598 <= tmp_20_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_12) & ~(1'b0 == grp_AES_Encrypt_ShiftRows_fu_301_ap_done))) begin
        tmp_21_reg_552 <= tmp_21_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & ~((1'b0 == tmp_21_reg_552) & (1'b0 == grp_AES_Encrypt_MixColumns_fu_294_ap_done)))) begin
        tmp_24_reg_556[7 : 4] <= tmp_24_fu_405_p2[7 : 4];
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_147) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_197) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_258) begin
        ap_sig_cseq_ST_st10_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_190) begin
        ap_sig_cseq_ST_st11_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_272) begin
        ap_sig_cseq_ST_st12_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_280) begin
        ap_sig_cseq_ST_st13_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_455) begin
        ap_sig_cseq_ST_st14_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_289) begin
        ap_sig_cseq_ST_st15_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_486) begin
        ap_sig_cseq_ST_st16_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_302) begin
        ap_sig_cseq_ST_st17_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_317) begin
        ap_sig_cseq_ST_st18_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st19_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_40) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_464) begin
        ap_sig_cseq_ST_st20_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_333) begin
        ap_sig_cseq_ST_st21_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_350) begin
        ap_sig_cseq_ST_st22_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_473) begin
        ap_sig_cseq_ST_st23_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_638) begin
        ap_sig_cseq_ST_st27_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_372) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_233) begin
        ap_sig_cseq_ST_st6_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_173) begin
        ap_sig_cseq_ST_st7_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_435) begin
        ap_sig_cseq_ST_st8_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_249) begin
        ap_sig_cseq_ST_st9_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_9)) begin
        cipher_address0 = tmp_1_i_fu_386_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        cipher_address0 = ap_const_lv10_0;
    end else begin
        cipher_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_9)) begin
        cipher_ce0 = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        cipher_ce0 = 1'b0;
    end else begin
        cipher_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b0 == ap_reg_ppstg_is_0iter_reg_617_pp1_iter1)) | ((1'b0 == ap_reg_ppstg_exitcond8_reg_603_pp1_iter1) & (1'b1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2))))) begin
        ciphertext_req_din = 1'b1;
    end else begin
        ciphertext_req_din = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b0 == ap_reg_ppstg_is_0iter_reg_617_pp1_iter1)) | ((1'b0 == ap_reg_ppstg_exitcond8_reg_603_pp1_iter1) & (1'b1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2))))) begin
        ciphertext_req_write = 1'b1;
    end else begin
        ciphertext_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_15)) begin
        expandedKey_address0 = sum5_cast_fu_437_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_3)) begin
        expandedKey_address0 = tmp_17_fu_351_p1;
    end else begin
        expandedKey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_3) | (1'b1 == ap_sig_cseq_ST_st18_fsm_15))) begin
        expandedKey_ce0 = 1'b1;
    end else begin
        expandedKey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond1_reg_489 == 1'b0) & (1'b1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_219_p4 = indvar_next_reg_493;
    end else begin
        indvar_phi_fu_219_p4 = indvar_reg_215;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        iv_req_write = 1'b1;
    end else begin
        iv_req_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond1_reg_489 == 1'b0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        iv_rsp_read = 1'b1;
    end else begin
        iv_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_18)) begin
        newState_ce0 = 1'b1;
    end else begin
        newState_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_20)) begin
        state_address0 = state_addr_33_reg_593;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_17)) begin
        state_address0 = state_addr_36_reg_574;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_11)) begin
        state_address0 = state_addr_34_reg_537;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        state_address0 = state_addr_31_reg_516;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        state_address0 = tmp_s_fu_334_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        state_address0 = tmp_22_fu_478_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_18)) begin
        state_address0 = tmp_19_fu_454_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_15)) begin
        state_address0 = tmp_25_fu_423_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & (1'b0 == exitcond_i3_fu_369_p2))) begin
        state_address0 = tmp_i_fu_381_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_3)) begin
        state_address0 = tmp_17_fu_351_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_12)) begin
        state_address0 = grp_AES_Encrypt_ShiftRows_fu_301_state_address0;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        state_address0 = grp_AES_Encrypt_MixColumns_fu_294_state_address0;
    end else begin
        state_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_12)) begin
        state_address1 = grp_AES_Encrypt_ShiftRows_fu_301_state_address1;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        state_address1 = grp_AES_Encrypt_MixColumns_fu_294_state_address1;
    end else begin
        state_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_7) & (1'b0 == exitcond_i3_fu_369_p2)) | (1'b1 == ap_sig_cseq_ST_st18_fsm_15) | (1'b1 == ap_sig_cseq_ST_st21_fsm_18) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_21) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2))) | (1'b1 == ap_sig_cseq_ST_st8_fsm_5) | (1'b1 == ap_sig_cseq_ST_st14_fsm_11) | (1'b1 == ap_sig_cseq_ST_st20_fsm_17) | (1'b1 == ap_sig_cseq_ST_st23_fsm_20) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1))))) begin
        state_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_12)) begin
        state_ce0 = grp_AES_Encrypt_ShiftRows_fu_301_state_ce0;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        state_ce0 = grp_AES_Encrypt_MixColumns_fu_294_state_ce0;
    end else begin
        state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_12)) begin
        state_ce1 = grp_AES_Encrypt_ShiftRows_fu_301_state_ce1;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        state_ce1 = grp_AES_Encrypt_MixColumns_fu_294_state_ce1;
    end else begin
        state_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_20)) begin
        state_d0 = tmp_20_reg_598;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_11)) begin
        state_d0 = cipher_load_reg_547;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_5) | (1'b1 == ap_sig_cseq_ST_st20_fsm_17))) begin
        state_d0 = reg_312;
    end else if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        state_d0 = iv_read_reg_498;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_12)) begin
        state_d0 = grp_AES_Encrypt_ShiftRows_fu_301_state_d0;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        state_d0 = grp_AES_Encrypt_MixColumns_fu_294_state_d0;
    end else begin
        state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_5) | (1'b1 == ap_sig_cseq_ST_st14_fsm_11) | (1'b1 == ap_sig_cseq_ST_st20_fsm_17) | (1'b1 == ap_sig_cseq_ST_st23_fsm_20) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & (1'b0 == ap_reg_ppstg_exitcond1_reg_489_pp0_iter1)))) begin
        state_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_12)) begin
        state_we0 = grp_AES_Encrypt_ShiftRows_fu_301_state_we0;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_14) & (1'b0 == tmp_21_reg_552))) begin
        state_we0 = grp_AES_Encrypt_MixColumns_fu_294_state_we0;
    end else begin
        state_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b0 == exitcond1_fu_322_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_156 & (1'b1 == ap_reg_ppiten_pp0_it1)) & ~(1'b0 == exitcond1_fu_322_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st6_fsm_3 : begin
            if (~(1'b0 == exitcond_i1_fu_339_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_4;
            end
        end
        ap_ST_st7_fsm_4 : begin
            ap_NS_fsm = ap_ST_st8_fsm_5;
        end
        ap_ST_st8_fsm_5 : begin
            ap_NS_fsm = ap_ST_st6_fsm_3;
        end
        ap_ST_st9_fsm_6 : begin
            if ((1'b0 == exitcond_fu_357_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_18;
            end
        end
        ap_ST_st10_fsm_7 : begin
            if (~(1'b0 == exitcond_i3_fu_369_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_8;
            end
        end
        ap_ST_st11_fsm_8 : begin
            ap_NS_fsm = ap_ST_st12_fsm_9;
        end
        ap_ST_st12_fsm_9 : begin
            ap_NS_fsm = ap_ST_st13_fsm_10;
        end
        ap_ST_st13_fsm_10 : begin
            ap_NS_fsm = ap_ST_st14_fsm_11;
        end
        ap_ST_st14_fsm_11 : begin
            ap_NS_fsm = ap_ST_st10_fsm_7;
        end
        ap_ST_st15_fsm_12 : begin
            if ((~(1'b0 == grp_AES_Encrypt_ShiftRows_fu_301_ap_done) & ~(1'b0 == tmp_21_fu_391_p2))) begin
                ap_NS_fsm = ap_ST_st17_fsm_14;
            end else if ((~(1'b0 == grp_AES_Encrypt_ShiftRows_fu_301_ap_done) & (1'b0 == tmp_21_fu_391_p2))) begin
                ap_NS_fsm = ap_ST_st16_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_12;
            end
        end
        ap_ST_st16_fsm_13 : begin
            ap_NS_fsm = ap_ST_st17_fsm_14;
        end
        ap_ST_st17_fsm_14 : begin
            if (~((1'b0 == tmp_21_reg_552) & (1'b0 == grp_AES_Encrypt_MixColumns_fu_294_ap_done))) begin
                ap_NS_fsm = ap_ST_st18_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_14;
            end
        end
        ap_ST_st18_fsm_15 : begin
            if (~(1'b0 == exitcond_i2_fu_411_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_16;
            end
        end
        ap_ST_st19_fsm_16 : begin
            ap_NS_fsm = ap_ST_st20_fsm_17;
        end
        ap_ST_st20_fsm_17 : begin
            ap_NS_fsm = ap_ST_st18_fsm_15;
        end
        ap_ST_st21_fsm_18 : begin
            if (~(1'b0 == exitcond_i_fu_442_p2)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_19;
            end
        end
        ap_ST_st22_fsm_19 : begin
            ap_NS_fsm = ap_ST_st23_fsm_20;
        end
        ap_ST_st23_fsm_20 : begin
            ap_NS_fsm = ap_ST_st21_fsm_18;
        end
        ap_ST_pp1_stg0_fsm_21 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b1 == ap_reg_ppiten_pp1_it1)) & ~((1'b1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b0 == exitcond8_fu_466_p2) & ~(1'b1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_21;
            end else if ((((1'b1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b1 == ap_reg_ppiten_pp1_it1)) | ((1'b1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_209 & (1'b1 == ap_reg_ppiten_pp1_it2)) & ~(1'b0 == exitcond8_fu_466_p2) & ~(1'b1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st27_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_21;
            end
        end
        ap_ST_st27_fsm_22 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_147 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_156 = ((iv_rsp_empty_n == 1'b0) & (exitcond1_reg_489 == 1'b0));
end

always @ (*) begin
    ap_sig_173 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_190 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_197 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_209 = ((ciphertext_req_full_n == 1'b0) & (1'b0 == ap_reg_ppstg_exitcond8_reg_603_pp1_iter1));
end

always @ (*) begin
    ap_sig_233 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_249 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_258 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_272 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_280 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_289 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_302 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_317 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_333 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_350 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_372 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_40 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_435 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_455 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_464 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_473 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_486 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_638 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

assign ciphertext_address = ap_const_lv32_0;

assign ciphertext_dataout = reg_317;

assign ciphertext_rsp_read = 1'b0;

assign ciphertext_size = ap_const_lv32_10;

assign exitcond1_fu_322_p2 = ((indvar_phi_fu_219_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond8_fu_466_p2 = ((indvar6_reg_283 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_357_p2 = ((i4_reg_238 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_339_p2 = ((i_0_i1_reg_227 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_411_p2 = ((i_0_i2_reg_261 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_369_p2 = ((i_i_reg_250 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_i_fu_442_p2 = ((i_0_i_reg_272 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign grp_AES_Encrypt_MixColumns_fu_294_ap_start = ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start;

assign grp_AES_Encrypt_ShiftRows_fu_301_ap_start = ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start;

assign grp_fu_306_p2 = (state_q0 ^ expandedKey_q0);

assign i_3_fu_448_p2 = (i_0_i_reg_272 + ap_const_lv5_1);

assign i_4_fu_375_p2 = (i_i_reg_250 + ap_const_lv5_1);

assign i_5_fu_363_p2 = (i4_reg_238 + ap_const_lv4_1);

assign i_6_fu_417_p2 = (i_0_i2_reg_261 + ap_const_lv5_1);

assign i_fu_345_p2 = (i_0_i1_reg_227 + ap_const_lv5_1);

assign indvar_next7_fu_472_p2 = (indvar6_reg_283 + ap_const_lv5_1);

assign indvar_next_fu_328_p2 = (indvar_phi_fu_219_p4 + ap_const_lv5_1);

assign is_0iter_fu_483_p2 = ((indvar6_reg_283 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign iv_address = ap_const_lv32_0;

assign iv_dataout = ap_const_lv8_0;

assign iv_req_din = 1'b0;

assign iv_size = ap_const_lv32_10;

assign newState_address0 = tmp_19_fu_454_p1;

assign sum5_cast_fu_437_p1 = sum5_fu_432_p2;

assign sum5_fu_432_p2 = (tmp_24_reg_556 + tmp_74_cast_fu_428_p1);

assign tmp_17_fu_351_p1 = i_0_i1_reg_227;

assign tmp_19_fu_454_p1 = i_0_i_reg_272;

assign tmp_1_i_fu_386_p1 = reg_317;

assign tmp_20_fu_460_p2 = (state_q0 ^ newState_q0);

assign tmp_21_fu_391_p2 = ((i4_reg_238 == ap_const_lv4_9) ? 1'b1 : 1'b0);

assign tmp_22_fu_478_p1 = indvar6_reg_283;

assign tmp_23_fu_397_p3 = {{i4_reg_238}, {ap_const_lv4_0}};

assign tmp_24_fu_405_p2 = (tmp_23_fu_397_p3 + ap_const_lv8_10);

assign tmp_25_fu_423_p1 = i_0_i2_reg_261;

assign tmp_74_cast_fu_428_p1 = i_0_i2_reg_261;

assign tmp_i_fu_381_p1 = i_i_reg_250;

assign tmp_s_fu_334_p1 = ap_reg_ppstg_indvar_reg_215_pp0_iter1;

always @ (posedge ap_clk) begin
    tmp_24_reg_556[3:0] <= 4'b0000;
end

endmodule //AES_Encrypt
