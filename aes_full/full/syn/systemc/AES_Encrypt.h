// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AES_Encrypt_HH_
#define _AES_Encrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AES_Encrypt_MixColumns.h"
#include "AES_Encrypt_ShiftRows.h"
#include "AES_Encrypt_MixColumns_cipher.h"
#include "AES_Encrypt_state.h"
#include "AES_Encrypt_CRTLSc_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTLSC_ADDR_WIDTH = 10,
         unsigned int C_S_AXI_CRTLSC_DATA_WIDTH = 32>
struct AES_Encrypt : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > ciphertext_req_din;
    sc_in< sc_logic > ciphertext_req_full_n;
    sc_out< sc_logic > ciphertext_req_write;
    sc_in< sc_logic > ciphertext_rsp_empty_n;
    sc_out< sc_logic > ciphertext_rsp_read;
    sc_out< sc_lv<32> > ciphertext_address;
    sc_in< sc_lv<8> > ciphertext_datain;
    sc_out< sc_lv<8> > ciphertext_dataout;
    sc_out< sc_lv<32> > ciphertext_size;
    sc_out< sc_logic > iv_req_din;
    sc_in< sc_logic > iv_req_full_n;
    sc_out< sc_logic > iv_req_write;
    sc_in< sc_logic > iv_rsp_empty_n;
    sc_out< sc_logic > iv_rsp_read;
    sc_out< sc_lv<32> > iv_address;
    sc_in< sc_lv<8> > iv_datain;
    sc_out< sc_lv<8> > iv_dataout;
    sc_out< sc_lv<32> > iv_size;
    sc_in< sc_logic > s_axi_CRTLSc_AWVALID;
    sc_out< sc_logic > s_axi_CRTLSc_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTLSC_ADDR_WIDTH> > s_axi_CRTLSc_AWADDR;
    sc_in< sc_logic > s_axi_CRTLSc_WVALID;
    sc_out< sc_logic > s_axi_CRTLSc_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTLSC_DATA_WIDTH> > s_axi_CRTLSc_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTLSC_DATA_WIDTH/8> > s_axi_CRTLSc_WSTRB;
    sc_in< sc_logic > s_axi_CRTLSc_ARVALID;
    sc_out< sc_logic > s_axi_CRTLSc_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTLSC_ADDR_WIDTH> > s_axi_CRTLSc_ARADDR;
    sc_out< sc_logic > s_axi_CRTLSc_RVALID;
    sc_in< sc_logic > s_axi_CRTLSc_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTLSC_DATA_WIDTH> > s_axi_CRTLSc_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTLSc_RRESP;
    sc_out< sc_logic > s_axi_CRTLSc_BVALID;
    sc_in< sc_logic > s_axi_CRTLSc_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTLSc_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<10> > ap_var_for_const0;


    // Module declarations
    AES_Encrypt(sc_module_name name);
    SC_HAS_PROCESS(AES_Encrypt);

    ~AES_Encrypt();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AES_Encrypt_MixColumns_cipher* cipher_U;
    AES_Encrypt_CRTLSc_s_axi<C_S_AXI_CRTLSC_ADDR_WIDTH,C_S_AXI_CRTLSC_DATA_WIDTH>* AES_Encrypt_CRTLSc_s_axi_U;
    AES_Encrypt_state* state_U;
    AES_Encrypt_MixColumns* grp_AES_Encrypt_MixColumns_fu_294;
    AES_Encrypt_ShiftRows* grp_AES_Encrypt_ShiftRows_fu_301;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_40;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<4> > newState_address0;
    sc_signal< sc_logic > newState_ce0;
    sc_signal< sc_lv<8> > newState_q0;
    sc_signal< sc_lv<8> > expandedKey_address0;
    sc_signal< sc_logic > expandedKey_ce0;
    sc_signal< sc_lv<8> > expandedKey_q0;
    sc_signal< sc_lv<16> > Nr;
    sc_signal< sc_lv<10> > cipher_address0;
    sc_signal< sc_logic > cipher_ce0;
    sc_signal< sc_lv<8> > cipher_q0;
    sc_signal< sc_lv<8> > cipher_q1;
    sc_signal< sc_lv<8> > cipher_q2;
    sc_signal< sc_lv<8> > cipher_q3;
    sc_signal< sc_lv<5> > indvar_reg_215;
    sc_signal< sc_lv<5> > ap_reg_ppstg_indvar_reg_215_pp0_iter1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_147;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond1_reg_489;
    sc_signal< bool > ap_sig_156;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<5> > indvar6_reg_283;
    sc_signal< sc_lv<8> > grp_fu_306_p2;
    sc_signal< sc_lv<8> > reg_312;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_4;
    sc_signal< bool > ap_sig_173;
    sc_signal< sc_logic > ap_sig_cseq_ST_st19_fsm_16;
    sc_signal< bool > ap_sig_180;
    sc_signal< sc_lv<8> > state_q0;
    sc_signal< sc_lv<8> > reg_317;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_8;
    sc_signal< bool > ap_sig_190;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_21;
    sc_signal< bool > ap_sig_197;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_lv<1> > exitcond8_reg_603;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond8_reg_603_pp1_iter1;
    sc_signal< bool > ap_sig_209;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<1> > exitcond1_fu_322_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond1_reg_489_pp0_iter1;
    sc_signal< sc_lv<5> > indvar_next_fu_328_p2;
    sc_signal< sc_lv<5> > indvar_next_reg_493;
    sc_signal< sc_lv<8> > iv_read_reg_498;
    sc_signal< sc_lv<5> > i_fu_345_p2;
    sc_signal< sc_lv<5> > i_reg_506;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_3;
    sc_signal< bool > ap_sig_233;
    sc_signal< sc_lv<1> > exitcond_i1_fu_339_p2;
    sc_signal< sc_lv<4> > state_addr_31_reg_516;
    sc_signal< sc_lv<4> > i_5_fu_363_p2;
    sc_signal< sc_lv<4> > i_5_reg_524;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_6;
    sc_signal< bool > ap_sig_249;
    sc_signal< sc_lv<5> > i_4_fu_375_p2;
    sc_signal< sc_lv<5> > i_4_reg_532;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_7;
    sc_signal< bool > ap_sig_258;
    sc_signal< sc_lv<4> > state_addr_34_reg_537;
    sc_signal< sc_lv<1> > exitcond_i3_fu_369_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_9;
    sc_signal< bool > ap_sig_272;
    sc_signal< sc_lv<8> > cipher_load_reg_547;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_10;
    sc_signal< bool > ap_sig_280;
    sc_signal< sc_lv<1> > tmp_21_fu_391_p2;
    sc_signal< sc_lv<1> > tmp_21_reg_552;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_12;
    sc_signal< bool > ap_sig_289;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_ap_done;
    sc_signal< sc_lv<8> > tmp_24_fu_405_p2;
    sc_signal< sc_lv<8> > tmp_24_reg_556;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_14;
    sc_signal< bool > ap_sig_302;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_ap_done;
    sc_signal< sc_lv<5> > i_6_fu_417_p2;
    sc_signal< sc_lv<5> > i_6_reg_564;
    sc_signal< sc_logic > ap_sig_cseq_ST_st18_fsm_15;
    sc_signal< bool > ap_sig_317;
    sc_signal< sc_lv<1> > exitcond_i2_fu_411_p2;
    sc_signal< sc_lv<4> > state_addr_36_reg_574;
    sc_signal< sc_lv<1> > exitcond_i_fu_442_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st21_fsm_18;
    sc_signal< bool > ap_sig_333;
    sc_signal< sc_lv<5> > i_3_fu_448_p2;
    sc_signal< sc_lv<5> > i_3_reg_583;
    sc_signal< sc_lv<4> > state_addr_33_reg_593;
    sc_signal< sc_lv<8> > tmp_20_fu_460_p2;
    sc_signal< sc_lv<8> > tmp_20_reg_598;
    sc_signal< sc_logic > ap_sig_cseq_ST_st22_fsm_19;
    sc_signal< bool > ap_sig_350;
    sc_signal< sc_lv<1> > exitcond8_fu_466_p2;
    sc_signal< sc_lv<5> > indvar_next7_fu_472_p2;
    sc_signal< sc_lv<1> > is_0iter_fu_483_p2;
    sc_signal< sc_lv<1> > is_0iter_reg_617;
    sc_signal< sc_lv<1> > ap_reg_ppstg_is_0iter_reg_617_pp1_iter1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_372;
    sc_signal< sc_lv<4> > state_address0;
    sc_signal< sc_logic > state_ce0;
    sc_signal< sc_logic > state_we0;
    sc_signal< sc_lv<8> > state_d0;
    sc_signal< sc_lv<4> > state_address1;
    sc_signal< sc_logic > state_ce1;
    sc_signal< sc_lv<8> > state_q1;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_ap_start;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_ap_idle;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_ap_ready;
    sc_signal< sc_lv<4> > grp_AES_Encrypt_MixColumns_fu_294_state_address0;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_state_ce0;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_state_we0;
    sc_signal< sc_lv<8> > grp_AES_Encrypt_MixColumns_fu_294_state_d0;
    sc_signal< sc_lv<4> > grp_AES_Encrypt_MixColumns_fu_294_state_address1;
    sc_signal< sc_logic > grp_AES_Encrypt_MixColumns_fu_294_state_ce1;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_ap_start;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_ap_idle;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_ap_ready;
    sc_signal< sc_lv<4> > grp_AES_Encrypt_ShiftRows_fu_301_state_address0;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_state_ce0;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_state_we0;
    sc_signal< sc_lv<8> > grp_AES_Encrypt_ShiftRows_fu_301_state_d0;
    sc_signal< sc_lv<4> > grp_AES_Encrypt_ShiftRows_fu_301_state_address1;
    sc_signal< sc_logic > grp_AES_Encrypt_ShiftRows_fu_301_state_ce1;
    sc_signal< sc_lv<5> > indvar_phi_fu_219_p4;
    sc_signal< sc_lv<5> > i_0_i1_reg_227;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_5;
    sc_signal< bool > ap_sig_435;
    sc_signal< sc_lv<4> > i4_reg_238;
    sc_signal< sc_lv<5> > i_i_reg_250;
    sc_signal< sc_lv<1> > exitcond_fu_357_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_11;
    sc_signal< bool > ap_sig_455;
    sc_signal< sc_lv<5> > i_0_i2_reg_261;
    sc_signal< sc_logic > ap_sig_cseq_ST_st20_fsm_17;
    sc_signal< bool > ap_sig_464;
    sc_signal< sc_lv<5> > i_0_i_reg_272;
    sc_signal< sc_logic > ap_sig_cseq_ST_st23_fsm_20;
    sc_signal< bool > ap_sig_473;
    sc_signal< sc_logic > ap_reg_grp_AES_Encrypt_MixColumns_fu_294_ap_start;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_13;
    sc_signal< bool > ap_sig_486;
    sc_signal< sc_logic > ap_reg_grp_AES_Encrypt_ShiftRows_fu_301_ap_start;
    sc_signal< sc_lv<64> > tmp_s_fu_334_p1;
    sc_signal< sc_lv<64> > tmp_17_fu_351_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_381_p1;
    sc_signal< sc_lv<64> > tmp_1_i_fu_386_p1;
    sc_signal< sc_lv<64> > sum5_cast_fu_437_p1;
    sc_signal< sc_lv<64> > tmp_25_fu_423_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_454_p1;
    sc_signal< sc_lv<64> > tmp_22_fu_478_p1;
    sc_signal< sc_lv<8> > tmp_23_fu_397_p3;
    sc_signal< sc_lv<8> > tmp_74_cast_fu_428_p1;
    sc_signal< sc_lv<8> > sum5_fu_432_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st27_fsm_22;
    sc_signal< bool > ap_sig_638;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_st1_fsm_0;
    static const sc_lv<23> ap_ST_st2_fsm_1;
    static const sc_lv<23> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<23> ap_ST_st6_fsm_3;
    static const sc_lv<23> ap_ST_st7_fsm_4;
    static const sc_lv<23> ap_ST_st8_fsm_5;
    static const sc_lv<23> ap_ST_st9_fsm_6;
    static const sc_lv<23> ap_ST_st10_fsm_7;
    static const sc_lv<23> ap_ST_st11_fsm_8;
    static const sc_lv<23> ap_ST_st12_fsm_9;
    static const sc_lv<23> ap_ST_st13_fsm_10;
    static const sc_lv<23> ap_ST_st14_fsm_11;
    static const sc_lv<23> ap_ST_st15_fsm_12;
    static const sc_lv<23> ap_ST_st16_fsm_13;
    static const sc_lv<23> ap_ST_st17_fsm_14;
    static const sc_lv<23> ap_ST_st18_fsm_15;
    static const sc_lv<23> ap_ST_st19_fsm_16;
    static const sc_lv<23> ap_ST_st20_fsm_17;
    static const sc_lv<23> ap_ST_st21_fsm_18;
    static const sc_lv<23> ap_ST_st22_fsm_19;
    static const sc_lv<23> ap_ST_st23_fsm_20;
    static const sc_lv<23> ap_ST_pp1_stg0_fsm_21;
    static const sc_lv<23> ap_ST_st27_fsm_22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_147();
    void thread_ap_sig_156();
    void thread_ap_sig_173();
    void thread_ap_sig_180();
    void thread_ap_sig_190();
    void thread_ap_sig_197();
    void thread_ap_sig_209();
    void thread_ap_sig_233();
    void thread_ap_sig_249();
    void thread_ap_sig_258();
    void thread_ap_sig_272();
    void thread_ap_sig_280();
    void thread_ap_sig_289();
    void thread_ap_sig_302();
    void thread_ap_sig_317();
    void thread_ap_sig_333();
    void thread_ap_sig_350();
    void thread_ap_sig_372();
    void thread_ap_sig_40();
    void thread_ap_sig_435();
    void thread_ap_sig_455();
    void thread_ap_sig_464();
    void thread_ap_sig_473();
    void thread_ap_sig_486();
    void thread_ap_sig_638();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_21();
    void thread_ap_sig_cseq_ST_st10_fsm_7();
    void thread_ap_sig_cseq_ST_st11_fsm_8();
    void thread_ap_sig_cseq_ST_st12_fsm_9();
    void thread_ap_sig_cseq_ST_st13_fsm_10();
    void thread_ap_sig_cseq_ST_st14_fsm_11();
    void thread_ap_sig_cseq_ST_st15_fsm_12();
    void thread_ap_sig_cseq_ST_st16_fsm_13();
    void thread_ap_sig_cseq_ST_st17_fsm_14();
    void thread_ap_sig_cseq_ST_st18_fsm_15();
    void thread_ap_sig_cseq_ST_st19_fsm_16();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st20_fsm_17();
    void thread_ap_sig_cseq_ST_st21_fsm_18();
    void thread_ap_sig_cseq_ST_st22_fsm_19();
    void thread_ap_sig_cseq_ST_st23_fsm_20();
    void thread_ap_sig_cseq_ST_st27_fsm_22();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st6_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_4();
    void thread_ap_sig_cseq_ST_st8_fsm_5();
    void thread_ap_sig_cseq_ST_st9_fsm_6();
    void thread_cipher_address0();
    void thread_cipher_ce0();
    void thread_ciphertext_address();
    void thread_ciphertext_dataout();
    void thread_ciphertext_req_din();
    void thread_ciphertext_req_write();
    void thread_ciphertext_rsp_read();
    void thread_ciphertext_size();
    void thread_exitcond1_fu_322_p2();
    void thread_exitcond8_fu_466_p2();
    void thread_exitcond_fu_357_p2();
    void thread_exitcond_i1_fu_339_p2();
    void thread_exitcond_i2_fu_411_p2();
    void thread_exitcond_i3_fu_369_p2();
    void thread_exitcond_i_fu_442_p2();
    void thread_expandedKey_address0();
    void thread_expandedKey_ce0();
    void thread_grp_AES_Encrypt_MixColumns_fu_294_ap_start();
    void thread_grp_AES_Encrypt_ShiftRows_fu_301_ap_start();
    void thread_grp_fu_306_p2();
    void thread_i_3_fu_448_p2();
    void thread_i_4_fu_375_p2();
    void thread_i_5_fu_363_p2();
    void thread_i_6_fu_417_p2();
    void thread_i_fu_345_p2();
    void thread_indvar_next7_fu_472_p2();
    void thread_indvar_next_fu_328_p2();
    void thread_indvar_phi_fu_219_p4();
    void thread_is_0iter_fu_483_p2();
    void thread_iv_address();
    void thread_iv_dataout();
    void thread_iv_req_din();
    void thread_iv_req_write();
    void thread_iv_rsp_read();
    void thread_iv_size();
    void thread_newState_address0();
    void thread_newState_ce0();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_we0();
    void thread_sum5_cast_fu_437_p1();
    void thread_sum5_fu_432_p2();
    void thread_tmp_17_fu_351_p1();
    void thread_tmp_19_fu_454_p1();
    void thread_tmp_1_i_fu_386_p1();
    void thread_tmp_20_fu_460_p2();
    void thread_tmp_21_fu_391_p2();
    void thread_tmp_22_fu_478_p1();
    void thread_tmp_23_fu_397_p3();
    void thread_tmp_24_fu_405_p2();
    void thread_tmp_25_fu_423_p1();
    void thread_tmp_74_cast_fu_428_p1();
    void thread_tmp_i_fu_381_p1();
    void thread_tmp_s_fu_334_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
