

================================================================
== Vivado HLS Report for 'AES_Encrypt_ShiftRows'
================================================================
* Date:           Wed Nov 20 22:18:37 2019

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        aes_full
* Solution:       full
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.10|      2.39|        0.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   58|   58|   58|   58|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   48|   48|         3|          -|          -|    16|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!exitcond)
12 --> 
	13  / true
13 --> 
	11  / true
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: state_addr [1/1] 0.00ns
:0  %state_addr = getelementptr [16 x i8]* %state, i64 0, i64 0

ST_1: tmp_state [1/1] 0.00ns
:1  %tmp_state = alloca [16 x i8], align 16

ST_1: state_load [2/2] 2.39ns
:2  %state_load = load i8* %state_addr, align 1

ST_1: state_addr_1 [1/1] 0.00ns
:5  %state_addr_1 = getelementptr [16 x i8]* %state, i64 0, i64 5

ST_1: state_load_1 [2/2] 2.39ns
:6  %state_load_1 = load i8* %state_addr_1, align 1


 <State 2>: 2.39ns
ST_2: state_load [1/2] 2.39ns
:2  %state_load = load i8* %state_addr, align 1

ST_2: state_load_1 [1/2] 2.39ns
:6  %state_load_1 = load i8* %state_addr_1, align 1

ST_2: state_addr_2 [1/1] 0.00ns
:9  %state_addr_2 = getelementptr [16 x i8]* %state, i64 0, i64 10

ST_2: state_load_2 [2/2] 2.39ns
:10  %state_load_2 = load i8* %state_addr_2, align 1

ST_2: state_addr_3 [1/1] 0.00ns
:13  %state_addr_3 = getelementptr [16 x i8]* %state, i64 0, i64 15

ST_2: state_load_3 [2/2] 2.39ns
:14  %state_load_3 = load i8* %state_addr_3, align 1


 <State 3>: 2.39ns
ST_3: tmp_state_addr [1/1] 0.00ns
:3  %tmp_state_addr = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 0

ST_3: stg_26 [1/1] 2.39ns
:4  store i8 %state_load, i8* %tmp_state_addr, align 16

ST_3: tmp_state_addr_1 [1/1] 0.00ns
:7  %tmp_state_addr_1 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 1

ST_3: stg_28 [1/1] 2.39ns
:8  store i8 %state_load_1, i8* %tmp_state_addr_1, align 1

ST_3: state_load_2 [1/2] 2.39ns
:10  %state_load_2 = load i8* %state_addr_2, align 1

ST_3: state_load_3 [1/2] 2.39ns
:14  %state_load_3 = load i8* %state_addr_3, align 1

ST_3: state_addr_4 [1/1] 0.00ns
:17  %state_addr_4 = getelementptr [16 x i8]* %state, i64 0, i64 4

ST_3: state_load_4 [2/2] 2.39ns
:18  %state_load_4 = load i8* %state_addr_4, align 1

ST_3: state_addr_5 [1/1] 0.00ns
:21  %state_addr_5 = getelementptr [16 x i8]* %state, i64 0, i64 9

ST_3: state_load_5 [2/2] 2.39ns
:22  %state_load_5 = load i8* %state_addr_5, align 1


 <State 4>: 2.39ns
ST_4: tmp_state_addr_2 [1/1] 0.00ns
:11  %tmp_state_addr_2 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 2

ST_4: stg_36 [1/1] 2.39ns
:12  store i8 %state_load_2, i8* %tmp_state_addr_2, align 2

ST_4: tmp_state_addr_3 [1/1] 0.00ns
:15  %tmp_state_addr_3 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 3

ST_4: stg_38 [1/1] 2.39ns
:16  store i8 %state_load_3, i8* %tmp_state_addr_3, align 1

ST_4: state_load_4 [1/2] 2.39ns
:18  %state_load_4 = load i8* %state_addr_4, align 1

ST_4: state_load_5 [1/2] 2.39ns
:22  %state_load_5 = load i8* %state_addr_5, align 1

ST_4: state_addr_6 [1/1] 0.00ns
:25  %state_addr_6 = getelementptr [16 x i8]* %state, i64 0, i64 14

ST_4: state_load_6 [2/2] 2.39ns
:26  %state_load_6 = load i8* %state_addr_6, align 1

ST_4: state_addr_7 [1/1] 0.00ns
:29  %state_addr_7 = getelementptr [16 x i8]* %state, i64 0, i64 3

ST_4: state_load_7 [2/2] 2.39ns
:30  %state_load_7 = load i8* %state_addr_7, align 1


 <State 5>: 2.39ns
ST_5: tmp_state_addr_4 [1/1] 0.00ns
:19  %tmp_state_addr_4 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 4

ST_5: stg_46 [1/1] 2.39ns
:20  store i8 %state_load_4, i8* %tmp_state_addr_4, align 4

ST_5: tmp_state_addr_5 [1/1] 0.00ns
:23  %tmp_state_addr_5 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 5

ST_5: stg_48 [1/1] 2.39ns
:24  store i8 %state_load_5, i8* %tmp_state_addr_5, align 1

ST_5: state_load_6 [1/2] 2.39ns
:26  %state_load_6 = load i8* %state_addr_6, align 1

ST_5: state_load_7 [1/2] 2.39ns
:30  %state_load_7 = load i8* %state_addr_7, align 1

ST_5: state_addr_8 [1/1] 0.00ns
:33  %state_addr_8 = getelementptr [16 x i8]* %state, i64 0, i64 8

ST_5: state_load_8 [2/2] 2.39ns
:34  %state_load_8 = load i8* %state_addr_8, align 1

ST_5: state_addr_9 [1/1] 0.00ns
:37  %state_addr_9 = getelementptr [16 x i8]* %state, i64 0, i64 13

ST_5: state_load_9 [2/2] 2.39ns
:38  %state_load_9 = load i8* %state_addr_9, align 1


 <State 6>: 2.39ns
ST_6: tmp_state_addr_6 [1/1] 0.00ns
:27  %tmp_state_addr_6 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 6

ST_6: stg_56 [1/1] 2.39ns
:28  store i8 %state_load_6, i8* %tmp_state_addr_6, align 2

ST_6: tmp_state_addr_7 [1/1] 0.00ns
:31  %tmp_state_addr_7 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 7

ST_6: stg_58 [1/1] 2.39ns
:32  store i8 %state_load_7, i8* %tmp_state_addr_7, align 1

ST_6: state_load_8 [1/2] 2.39ns
:34  %state_load_8 = load i8* %state_addr_8, align 1

ST_6: state_load_9 [1/2] 2.39ns
:38  %state_load_9 = load i8* %state_addr_9, align 1

ST_6: state_addr_10 [1/1] 0.00ns
:41  %state_addr_10 = getelementptr [16 x i8]* %state, i64 0, i64 2

ST_6: state_load_10 [2/2] 2.39ns
:42  %state_load_10 = load i8* %state_addr_10, align 1

ST_6: state_addr_11 [1/1] 0.00ns
:45  %state_addr_11 = getelementptr [16 x i8]* %state, i64 0, i64 7

ST_6: state_load_11 [2/2] 2.39ns
:46  %state_load_11 = load i8* %state_addr_11, align 1


 <State 7>: 2.39ns
ST_7: tmp_state_addr_8 [1/1] 0.00ns
:35  %tmp_state_addr_8 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 8

ST_7: stg_66 [1/1] 2.39ns
:36  store i8 %state_load_8, i8* %tmp_state_addr_8, align 8

ST_7: tmp_state_addr_9 [1/1] 0.00ns
:39  %tmp_state_addr_9 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 9

ST_7: stg_68 [1/1] 2.39ns
:40  store i8 %state_load_9, i8* %tmp_state_addr_9, align 1

ST_7: state_load_10 [1/2] 2.39ns
:42  %state_load_10 = load i8* %state_addr_10, align 1

ST_7: state_load_11 [1/2] 2.39ns
:46  %state_load_11 = load i8* %state_addr_11, align 1

ST_7: state_addr_12 [1/1] 0.00ns
:49  %state_addr_12 = getelementptr [16 x i8]* %state, i64 0, i64 12

ST_7: state_load_12 [2/2] 2.39ns
:50  %state_load_12 = load i8* %state_addr_12, align 1

ST_7: state_addr_13 [1/1] 0.00ns
:53  %state_addr_13 = getelementptr [16 x i8]* %state, i64 0, i64 1

ST_7: state_load_13 [2/2] 2.39ns
:54  %state_load_13 = load i8* %state_addr_13, align 1


 <State 8>: 2.39ns
ST_8: tmp_state_addr_10 [1/1] 0.00ns
:43  %tmp_state_addr_10 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 10

ST_8: stg_76 [1/1] 2.39ns
:44  store i8 %state_load_10, i8* %tmp_state_addr_10, align 2

ST_8: tmp_state_addr_11 [1/1] 0.00ns
:47  %tmp_state_addr_11 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 11

ST_8: stg_78 [1/1] 2.39ns
:48  store i8 %state_load_11, i8* %tmp_state_addr_11, align 1

ST_8: state_load_12 [1/2] 2.39ns
:50  %state_load_12 = load i8* %state_addr_12, align 1

ST_8: state_load_13 [1/2] 2.39ns
:54  %state_load_13 = load i8* %state_addr_13, align 1

ST_8: state_addr_14 [1/1] 0.00ns
:57  %state_addr_14 = getelementptr [16 x i8]* %state, i64 0, i64 6

ST_8: state_load_14 [2/2] 2.39ns
:58  %state_load_14 = load i8* %state_addr_14, align 1

ST_8: state_addr_15 [1/1] 0.00ns
:61  %state_addr_15 = getelementptr [16 x i8]* %state, i64 0, i64 11

ST_8: state_load_15 [2/2] 2.39ns
:62  %state_load_15 = load i8* %state_addr_15, align 1


 <State 9>: 2.39ns
ST_9: tmp_state_addr_12 [1/1] 0.00ns
:51  %tmp_state_addr_12 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 12

ST_9: stg_86 [1/1] 2.39ns
:52  store i8 %state_load_12, i8* %tmp_state_addr_12, align 4

ST_9: tmp_state_addr_13 [1/1] 0.00ns
:55  %tmp_state_addr_13 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 13

ST_9: stg_88 [1/1] 2.39ns
:56  store i8 %state_load_13, i8* %tmp_state_addr_13, align 1

ST_9: state_load_14 [1/2] 2.39ns
:58  %state_load_14 = load i8* %state_addr_14, align 1

ST_9: state_load_15 [1/2] 2.39ns
:62  %state_load_15 = load i8* %state_addr_15, align 1


 <State 10>: 2.39ns
ST_10: tmp_state_addr_14 [1/1] 0.00ns
:59  %tmp_state_addr_14 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 14

ST_10: stg_92 [1/1] 2.39ns
:60  store i8 %state_load_14, i8* %tmp_state_addr_14, align 2

ST_10: tmp_state_addr_15 [1/1] 0.00ns
:63  %tmp_state_addr_15 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 15

ST_10: stg_94 [1/1] 2.39ns
:64  store i8 %state_load_15, i8* %tmp_state_addr_15, align 1

ST_10: stg_95 [1/1] 1.31ns
:65  br label %1


 <State 11>: 2.39ns
ST_11: i [1/1] 0.00ns
:0  %i = phi i5 [ 0, %0 ], [ %i_1, %2 ]

ST_11: exitcond [1/1] 1.84ns
:1  %exitcond = icmp eq i5 %i, -16

ST_11: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_11: i_1 [1/1] 1.50ns
:3  %i_1 = add i5 %i, 1

ST_11: stg_100 [1/1] 0.00ns
:4  br i1 %exitcond, label %3, label %2

ST_11: tmp [1/1] 0.00ns
:0  %tmp = zext i5 %i to i64

ST_11: tmp_state_addr_16 [1/1] 0.00ns
:1  %tmp_state_addr_16 = getelementptr inbounds [16 x i8]* %tmp_state, i64 0, i64 %tmp

ST_11: tmp_state_load [2/2] 2.39ns
:2  %tmp_state_load = load i8* %tmp_state_addr_16, align 1

ST_11: stg_104 [1/1] 0.00ns
:0  ret void


 <State 12>: 2.39ns
ST_12: tmp_state_load [1/2] 2.39ns
:2  %tmp_state_load = load i8* %tmp_state_addr_16, align 1


 <State 13>: 2.39ns
ST_13: state_addr_16 [1/1] 0.00ns
:3  %state_addr_16 = getelementptr [16 x i8]* %state, i64 0, i64 %tmp

ST_13: stg_107 [1/1] 2.39ns
:4  store i8 %tmp_state_load, i8* %state_addr_16, align 1

ST_13: stg_108 [1/1] 0.00ns
:5  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.1ns, clock uncertainty: 0ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
